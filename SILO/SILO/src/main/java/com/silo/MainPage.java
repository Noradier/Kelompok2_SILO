/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.silo;

import com.silo.controller.DaftarItemCtl;
import com.silo.controller.DaftarSJCtl;
import com.silo.controller.DaftarSPCtl;

public class MainPage extends javax.swing.JFrame {
    
    private int state;
    private static final int
            showItem = 1, showInvoice = 2, showDeliveryNote = 3;
    private String editedId;
    private int editedCursor;
    
    DaftarItemCtl daftarItemCtl;
    DaftarSPCtl daftarSPCtl;
    DaftarSJCtl daftarSJCtl;
    
    public MainPage() {
        initComponents();
        
        state = 0;
        header.setVisible(false);
        content.setVisible(false);
        buttonHolder.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        content = new javax.swing.JScrollPane();
        buttonHolder = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        itemMenu = new javax.swing.JMenu();
        invoiceMenu = new javax.swing.JMenu();
        deliveryNoteMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(800, 600));

        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onAddButtonClick(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onSearchButtonClick(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)))
                .addContainerGap(528, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(addButton)
                .addContainerGap())
        );

        buttonHolder.setPreferredSize(new java.awt.Dimension(81, 100));

        itemMenu.setText("Item");
        itemMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onItemMenuClick(evt);
            }
        });
        jMenuBar1.add(itemMenu);

        invoiceMenu.setText("Invoice");
        invoiceMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onInvoiceMenuClick(evt);
            }
        });
        jMenuBar1.add(invoiceMenu);

        deliveryNoteMenu.setText("Delivery Note");
        deliveryNoteMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onDNMenuClick(evt);
            }
        });
        jMenuBar1.add(deliveryNoteMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(content)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void onItemMenuClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onItemMenuClick
        // TODO add your handling code here:
        showItemList();
        state = showItem;
    }//GEN-LAST:event_onItemMenuClick

    public void showItemList(){
        daftarItemCtl.searchItem();
    }
    
    public void showItems(Object[][] item){
        ItemList.show(item, content);
        buttonHolder.removeAll();
        editButtons = new javax.swing.JButton[item.length];
        for(int i=0; i<item.length; i++){
            editButtons[i] = new javax.swing.JButton("Edit");
            editButtons[i].setSize(80,15);
            editButtons[i].setLocation(0, 16 * i);
            editButtons[i].setName(item[i][0].toString());
            editButtons[i].addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    onEditButtonClick(evt);
                }
            });
            
            buttonHolder.add(editButtons[i]);
        }
        
        if(state != showItem){
            addButton.setVisible(true);
            header.setVisible(true);
            content.setVisible(true);
            buttonHolder.setVisible(true);
        }
        
        buttonHolder.repaint();
    }
    
    private void onSearchButtonClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onSearchButtonClick
        // TODO add your handling code here:
        searchKeyword();
    }//GEN-LAST:event_onSearchButtonClick

    private void searchKeyword(){
        switch(state){
            case showItem:
                daftarItemCtl.searchItem(searchBar.getText().toLowerCase());
                break;
            case showInvoice:
                daftarSPCtl.searchInvoice(searchBar.getText().toLowerCase());
                break;
            case showDeliveryNote:
                daftarSJCtl.searchDeliveryNote(searchBar.getText().toLowerCase());
                break;
        }
    }
    
    private void onAddButtonClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onAddButtonClick
        // TODO add your handling code here:
        showNewItemForm();
    }//GEN-LAST:event_onAddButtonClick

    private void showNewItemForm(){
        daftarItemCtl.openNewItemForm();
    }
    private void onInvoiceMenuClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onInvoiceMenuClick
        // TODO add your handling code here:
        showInvoiceList();
        
        state = showInvoice;
    }//GEN-LAST:event_onInvoiceMenuClick

    private void onDNMenuClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onDNMenuClick
        // TODO add your handling code here:
        showDNList();
        
        state = showDeliveryNote;
    }//GEN-LAST:event_onDNMenuClick

    private void showDNList(){
        daftarSJCtl.searchDeliveryNote();
    }
    
    public void showDeliveryNote(Object[][] deliveryNote){
        InvoiceList.show(deliveryNote, content);
        buttonHolder.removeAll();
        editButtons = new javax.swing.JButton[deliveryNote.length];
        for(int i=0; i<deliveryNote.length; i++){
            editButtons[i] = new javax.swing.JButton("View");
            editButtons[i].setSize(80,15);
            editButtons[i].setLocation(0, 16 * i);
            editButtons[i].setName(deliveryNote[i][1].toString());
            editButtons[i].addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    onViewButtonClick(evt);
                }
            });
            
            buttonHolder.add(editButtons[i]);
        }
        
        if(state != showDeliveryNote){
            addButton.setVisible(false);
            header.setVisible(true);
            content.setVisible(true);
            buttonHolder.setVisible(true);
        }
        
        buttonHolder.repaint();
    }
    
    private void showInvoiceList(){
        daftarSPCtl.searchInvoice();
    }
    
    public void showInvoice(Object[][] deliveryNote){
        InvoiceList.show(deliveryNote, content);
        buttonHolder.removeAll();
        editButtons = new javax.swing.JButton[deliveryNote.length];
        for(int i=0; i<deliveryNote.length; i++){
            editButtons[i] = new javax.swing.JButton("View");
            editButtons[i].setSize(80,15);
            editButtons[i].setLocation(0, 16 * i);
            editButtons[i].setName(deliveryNote[i][0].toString());
            editButtons[i].addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    onViewButtonClick(evt);
                }
            });
            
            buttonHolder.add(editButtons[i]);
        }
        
        if(state != showInvoice){
            addButton.setVisible(false);
            header.setVisible(true);
            content.setVisible(true);
            buttonHolder.setVisible(true);
        }
        
        buttonHolder.repaint();
    }
    
    private void onEditButtonClick(java.awt.event.MouseEvent evt){
        javax.swing.JButton jButton = (javax.swing.JButton)evt.getSource();
        editedId = jButton.getName();
        editedCursor = jButton.getY() / 16;
        showEditItemForm();
    }
    
    private void showEditItemForm(){
        daftarItemCtl.openEditItemForm();
    }
    
    private void onViewButtonClick(java.awt.event.MouseEvent evt){
        javax.swing.JButton jButton = (javax.swing.JButton)evt.getSource();
        editedId = jButton.getName();
        editedCursor = jButton.getY() / 16;
        switch(state){
            case showInvoice:
                showInvoiceDescription();
                break;
            case showDeliveryNote:
                showDNDescription();
                break;
        }
    }
    
    private void showInvoiceDescription(){
        daftarSPCtl.openInvoiceDescription();
    }
    
    private void showDNDescription(){
        daftarSJCtl.openDNDescription();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JScrollPane buttonHolder;
    private javax.swing.JScrollPane content;
    private javax.swing.JMenu deliveryNoteMenu;
    private javax.swing.JPanel header;
    private javax.swing.JMenu invoiceMenu;
    private javax.swing.JMenu itemMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.JButton[] editButtons;

    public String getEditedId() {
        return editedId;
    }

    public int getEditedCursor() {
        return editedCursor;
    }
    
    public void setDaftarItemCtl(DaftarItemCtl daftarItemCtl){
        this.daftarItemCtl = daftarItemCtl;
        this.daftarItemCtl.setMainPage(this);
    }
    
    public void setDaftarSPCtl(DaftarSPCtl daftarSPCtl){
        this.daftarSPCtl = daftarSPCtl;
        this.daftarSPCtl.setMainPage(this);
    }

    public void setDaftarSJCtl(DaftarSJCtl daftarSJCtl) {
        this.daftarSJCtl = daftarSJCtl;
        this.daftarSJCtl.setMainPage(this);
    }
}
